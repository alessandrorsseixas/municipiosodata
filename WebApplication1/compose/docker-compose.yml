version: '3.8'

services:

  api:
    image: your-aspnet-image:latest
    container_name: aspnet-api
    build:
      context: ./web
    ports:
      - "5000:80" # Mapeia a porta 5000 do host para a porta 80 do container
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
    volumes:
      - ./mnt/C/alessandro/_dev/prodeb/municipiosodata/appsettings.json:/app/appsettings.json # Mapeia o arquivo de configuração do host para o container
    networks:
      - app-network
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"  # Mapeia a porta 80 do host para a porta 80 do container
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf # Mapeia a configuração do NGINX
    depends_on:
      - api
    networks:
      - app-network
  mongo:
    image: mongo
    container_name: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    networks:
      - app_network

  redis:
    image: redis:latest
    container_name: redis
    restart: always
    volumes:
      - redis_data:/data
    networks:
      - app_network
    ports:
      - "6379:6379"

  rabbitmq:
    image: rabbitmq:3-management
    container_name: rabbitmq
    ports:
      - "5672:5672"         
      - "15672:15672"       
    environment:
      RABBITMQ_DEFAULT_USER: guest   
      RABBITMQ_DEFAULT_PASS: guest   
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq  
  jupyter:
      image: jupyter/base-notebook:latest
      container_name: jupyter_notebook
      ports:
        - "8888:8888"
      networks:
      - app_network  
      volumes:
        - ./notebooks:/home/jovyan/work
        - jupyter_data:/home/jovyan/.jupyter
      environment:
        - JUPYTER_ENABLE_LAB=yes
      command: start-notebook.sh --NotebookApp.token='39de6643bd315050f128f04ba158545bea6df48953bbb965e7e4e10eefd240fe' --NotebookApp.password='123456'

  portainer:
    image: portainer/portainer-ce:latest
    container_name: portainer
    restart: always
    networks:
      - app_network
    volumes:
      - portainer_data:/data
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
        - ADMIN_USERNAME=admin 
        - ADMIN_PASSWORD=123456 
    ports:
      - "9000:9000"
    depends_on:
      - mongo
      - redis
      - rabbitmq
      - jupyter

volumes:
  mongo_data: {}
  redis_data: {}
  portainer_data: {} 
  rabbitmq_data: {}
  jupyter_data: {}

networks:
  app_network:
    driver: bridge
